import speech_recognition as sr
import time

recognizer = sr.Recognizer()

# Hindi Numbers
hindi_number_map = {
    "‡§∂‡•Ç‡§®‡•ç‡§Ø": 0, "‡§è‡§ï": 1, "‡§¶‡•ã": 2, "‡§§‡•Ä‡§®": 3, "‡§ö‡§æ‡§∞": 4, "‡§™‡§æ‡§Ç‡§ö": 5,
    "‡§õ‡§π": 6, "‡§∏‡§æ‡§§": 7, "‡§Ü‡§†": 8, "‡§®‡•å": 9, "‡§¶‡§∏": 10,
    "‡§ó‡•ç‡§Ø‡§æ‡§∞‡§π": 11, "‡§¨‡§æ‡§∞‡§π": 12, "‡§§‡•á‡§∞‡§π": 13, "‡§ö‡•å‡§¶‡§π": 14, "‡§™‡§Ç‡§¶‡•ç‡§∞‡§π": 15,
    "‡§∏‡•ã‡§≤‡§π": 16, "‡§∏‡§§‡•ç‡§∞‡§π": 17, "‡§Ö‡§†‡§æ‡§∞‡§π": 18, "‡§â‡§®‡•ç‡§®‡•Ä‡§∏": 19,
    "‡§¨‡•Ä‡§∏": 20, "‡§á‡§ï‡•ç‡§ï‡•Ä‡§∏": 21, "‡§¨‡§æ‡§à‡§∏": 22, "‡§§‡•á‡§á‡§∏": 23,
    "‡§ö‡•å‡§¨‡•Ä‡§∏": 24, "‡§™‡§ö‡•ç‡§ö‡•Ä‡§∏": 25, "‡§õ‡§¨‡•ç‡§¨‡•Ä‡§∏": 26, "‡§∏‡§§‡•ç‡§§‡§æ‡§à‡§∏": 27,
    "‡§Ö‡§ü‡•ç‡§†‡§æ‡§à‡§∏": 28, "‡§â‡§®‡§§‡•Ä‡§∏": 29, "‡§§‡•Ä‡§∏": 30,
    "‡§á‡§ï‡§§‡•ç‡§§‡•Ä‡§∏": 31, "‡§¨‡§§‡•ç‡§§‡•Ä‡§∏": 32, "‡§§‡•à‡§Ç‡§§‡•Ä‡§∏": 33, "‡§ö‡•å‡§Ç‡§§‡•Ä‡§∏": 34,
    "‡§™‡•à‡§Ç‡§§‡•Ä‡§∏": 35, "‡§õ‡§§‡•ç‡§§‡•Ä‡§∏": 36, "‡§∏‡•à‡§Ç‡§§‡•Ä‡§∏": 37, "‡§Ö‡§°‡§º‡§§‡•Ä‡§∏": 38, "‡§â‡§®‡§ö‡§æ‡§≤‡•Ä‡§∏": 39,
    "‡§ö‡§æ‡§≤‡•Ä‡§∏": 40, "‡§á‡§ï‡§§‡§æ‡§≤‡•Ä‡§∏": 41, "‡§¨‡•á‡§ö‡§æ‡§≤‡§ø‡§∏": 42, "‡§§‡•à‡§Ç‡§§‡§æ‡§≤‡•Ä‡§∏": 43,
}

# Marathi Numbers
marathi_number_map = {
    "‡§∂‡•Ç‡§®‡•ç‡§Ø": 0, "‡§è‡§ï": 1, "‡§¶‡•ã‡§®": 2, "‡§§‡•Ä‡§®": 3, "‡§ö‡§æ‡§∞": 4, "‡§™‡§æ‡§ö": 5,
    "‡§∏‡§π‡§æ": 6, "‡§∏‡§æ‡§§": 7, "‡§Ü‡§†": 8, "‡§®‡§ä": 9, "‡§¶‡§π‡§æ": 10,
    "‡§Ö‡§ï‡§∞‡§æ": 11, "‡§¨‡§æ‡§∞‡§æ": 12, "‡§§‡•á‡§∞‡§æ": 13, "‡§ö‡•å‡§¶‡§æ": 14, "‡§™‡§Ç‡§ß‡§∞‡§æ": 15,
    "‡§∏‡•ã‡§≥‡§æ": 16, "‡§∏‡§§‡§∞‡§æ": 17, "‡§Ö‡§†‡§∞‡§æ": 18, "‡§è‡§ï‡•ã‡§£‡•Ä‡§∏": 19,
    "‡§µ‡•Ä‡§∏": 20, "‡§è‡§ï‡§µ‡•Ä‡§∏": 21, "‡§¨‡§æ‡§µ‡•Ä‡§∏": 22, "‡§§‡•á‡§µ‡•Ä‡§∏": 23,
    "‡§ö‡•ã‡§µ‡•Ä‡§∏": 24, "‡§™‡§Ç‡§ö‡§µ‡•Ä‡§∏": 25, "‡§∏‡§µ‡•ç‡§µ‡•Ä‡§∏": 26, "‡§∏‡§§‡•ç‡§§‡§æ‡§µ‡•Ä‡§∏": 27,
    "‡§Ö‡§†‡•ç‡§†‡§æ‡§µ‡•Ä‡§∏": 28, "‡§è‡§ï‡•ã‡§£‡§§‡•Ä‡§∏": 29, "‡§§‡•Ä‡§∏": 30,
    "‡§è‡§ï‡§§‡•Ä‡§∏": 31, "‡§¨‡§§‡•ç‡§§‡•Ä‡§∏": 32, "‡§§‡•á‡§π‡§§‡•Ä‡§∏": 33, "‡§ö‡•å‡§§‡•Ä‡§∏": 34,
    "‡§™‡§∏‡•ç‡§§‡•Ä‡§∏": 35, "‡§õ‡§§‡•ç‡§§‡•Ä‡§∏": 36, "‡§∏‡§¶‡§§‡•Ä‡§∏": 37, "‡§Ö‡§°‡§§‡•Ä‡§∏": 38, "‡§è‡§ï‡•ã‡§£‡§ö‡§æ‡§≥‡•Ä‡§∏": 39,
    "‡§ö‡§æ‡§≥‡•Ä‡§∏": 40, "‡§è‡§ï‡•ç‡§ï‡•á‡§ö‡§æ‡§≥‡•Ä‡§∏": 41, "‡§¨‡•á‡§ö‡§æ‡§≥‡•Ä‡§∏": 42, "‡§§‡•ç‡§∞‡•á‡§ö‡§æ‡§≥‡•Ä‡§∏": 43,
}

# -------------------------
# Listen & Recognize
# -------------------------
def listen_and_recognize(lang="mr-IN"):
    with sr.Microphone() as source:
        print(f"\nüé§ Speak a number in {'Hindi' if lang=='hi-IN' else 'Marathi'} (say 'stop' to exit)...")
        audio = recognizer.listen(source)

    try:
        text = recognizer.recognize_google(audio, language=lang)
        print("‚úÖ You said:", text)
        return text.strip().lower()
    except Exception as e:
        print("‚ùå Error:", e)
        return None

# -------------------------
# Convert text ‚Üí number
# -------------------------
def convert_to_number(text):
    if text.isdigit():  # Case 1: Pure digits
        return text

    # Case 2: Multi-word numbers ("‡§§‡•á‡§à‡§∏ ‡§ö‡§æ‡§∞ ‡§∏‡§æ‡§§" ‚Üí 237)
    parts = text.split()
    digits = []
    for part in parts:
        if part.isdigit():
            digits.append(part)
        elif part in hindi_number_map:
            digits.append(str(hindi_number_map[part]))
        elif part in marathi_number_map:
            digits.append(str(marathi_number_map[part]))
        else:
            return None
    return "".join(digits) if digits else None

# -------------------------
# Auto-Save Contact
# -------------------------
def save_to_contact(number):
    name = f"Contact_{int(time.time())}"  
    filename = f"{name}.vcf"

    with open(filename, "w", encoding="utf-8") as f:
        f.write("BEGIN:VCARD\n")
        f.write("VERSION:3.0\n")
        f.write(f"FN:{name}\n")
        f.write(f"TEL:{number}\n")
        f.write("END:VCARD\n")

    print(f"üìÇ Saved {number} as {filename}")

# -------------------------
# Main
# -------------------------
if __name__ == "__main__":
    while True:
        spoken_text = listen_and_recognize(lang="mr-IN")  # change to "hi-IN" for Hindi
        if spoken_text in ["stop", "‡§∏‡•ç‡§ü‡•â‡§™", "‡§∞‡•Å‡§ï‡•ã"]:  # exit words
            print("üëã Stopping...")
            break

        if spoken_text:
            number = convert_to_number(spoken_text)
            if number:
                print("üî¢ Converted:", number)
                save_to_contact(number)
            else:
                print("‚ùå Could not recognize number")
